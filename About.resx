<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAChARAA8eJAAQKDYAHzc9ACM3OgAcQlQAJkRNAC5heQA0ZXkARGNlADVshwA7cIUAM3COAEt9
        iAAzgbMANYq7AESAogBWlqkAWZmsAECNswBYobsAcKaqAGKnuwAxkcgAPJfIADKW0AA2oN4ANqHfADel
        5QA6peMAOanqADys7QBOnMAAU6fKAEuq2ABlqsAAaLTLAHK5ygBEq+QAT7DgAEGw7wBOuO8AVLfpAEe0
        8ABJtvAAUbvxAH3F0wB3x9sAesfaAGDA6ABlx+8AbMfpAHDH4gBxzu4AYMTxAGbH8QBy0PEAgICAAIHG
        0ACJ1uMAg9jtAIXZ7QCN3u0AldvgAIDY8QCD2vEAnObsAJ/q7wCO4fEAk+PxAJro8QCi7fEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAACwsAAAAAAAAAAAAAAAAAAAshEQAAAAAAAAAAAAAR
        CwsLGAsAAAAAAAAAABELISEhIRohCwAAAAAAAAshIygqJx4gGxoLAAAAAAshMzc3NwMDKSAdGgsAABEh
        Njk5OTgJCCopHx0aCwALNUFCQkFBNDIuKiAdGw8RCz1FRkZFQhMMNy4pIBsQCws/R0RIR0UwBwsrLCAd
        GgsLPEhISEA7PhIADS0gHRALERdESEgKATElAAYtIBwPEQALJENIFgUOBAIULR4aCwAAABELLzwmFxUi
        KBkLEQAAAAAAABELCwsLCwsRAAAAAP9/////P////x////gf///gD///wAf//4AD//8AAf//AAD//wAA
        //8AAP//AAD//wAA//+AAf//wAP///AP//8=
</value>
  </data>
</root>